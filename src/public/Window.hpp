/* ****************************************************************************************** */
/* Preprocessor/Namespace                                                                     */
/* ****************************************************************************************** */

#ifndef WINDOW_H
#define WINDOW_H

#include <AGLTypes.hpp>

#include <simd/simd.h>
#include <memory>
#include <functional>

namespace AGL {

/* ****************************************************************************************** */
/* Non-Member Variables                                                                       */
/* ****************************************************************************************** */

	/* None */

/* ****************************************************************************************** */
/* Implementation Class Declaration                                                           */
/* ****************************************************************************************** */

	class Window_ci;

/* ****************************************************************************************** */
/* Class Declaration                                                                          */
/* ****************************************************************************************** */

	class Scene_c;
	class Window_c {
		friend class Scene_ci;

/* ****************************************************************************************** */
/* Member Variables                                                                           */
/* ****************************************************************************************** */

	/* None */

/* ****************************************************************************************** */
/* Member Constructor/Destructors                                                             */
/* ****************************************************************************************** */

	public:
		~Window_c();
		Window_c(int Width, int Height, const char *Title, std::function<void(void)> StepFunction);

/* ****************************************************************************************** */
/* Member Function Prototypes                                                                 */
/* ****************************************************************************************** */

	public:
		void ClearScene();
		void AddScene(Scene_c &SceneToAdd);
		void Run();
		void Quit();

		friend std::ostream& operator<<(std::ostream &os, const Window_c &Window);

/* ****************************************************************************************** */
/* Implementation Class Pointer                                                               */
/* ****************************************************************************************** */

	private:
		std::unique_ptr<Window_ci> prv_pImpl;

/* ****************************************************************************************** */
/* Class Declaration End                                                                      */
/* ****************************************************************************************** */

	}; // class Window_c

/* ****************************************************************************************** */
/* Non-Member Function Prototypes                                                             */
/* ****************************************************************************************** */


/* ****************************************************************************************** */
/* Preprocessor/Namespace End                                                                 */
/* ****************************************************************************************** */

} // namespace AGL

#endif // define WINDOW_H
